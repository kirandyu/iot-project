{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    

    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for all the Virtual Machines."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for all the Virtual Machines."
      }
    },
    "SQLDnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "DNS Name(Has to Unique) for the Public IP used to access the SQL Virtual Machine."
      }
    },
    "PIDnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "DNS Name(Has to Unique) for the Public IP used to access the PI Virtual Machine."
      }
    },
    "WINDnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "DNS Name(Has to Unique) for the Public IP used to access the Controller Virtual Machine."
      }
    },

    


    
    "sqlAdministratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The admin user of the SQL Server"
      }
    },
    "sqlAdministratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the admin user of the SQL Server"
      }
    },
    "sqldatabasename": {
      "type": "string",
      "metadata": {
        "description": "The name of SQL database"
      }
    },
    

   

    "skuName": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    },
    "hostingPlanName": {
      "type": "string",
      "defaultValue": "AppServPlan",
      "metadata": {
        "description": "Describes Hosting plan's name"
      }
    },
    "webSiteName": {
      "type": "string",
      "metadata": {
        "description": "Describes webSite name which should be unique"
      }
    },
    "apiServerName": {
      "type": "string",
      "metadata": {
        "description": "Describes API Server name which should be unique"
      }
    },

    

   

    "b2cTenant": {
      "type": "string",
      "metadata": {
        "description": "Describes B2C Tenant Name Directory"
      }
    },
    "b2cClientId": {
      "type": "string",
      "metadata": {
        "description": "Describes the client Id registered with B2C Directory"
      }
    },
    "b2cSignUpPolicyId": {
      "type": "string",
      "metadata": {
        "description": "Describes the B2C Sign Up policy"
      }
    },
    "b2cSignInPolicyId": {
      "type": "string",
      "metadata": {
        "description": "Describes the B2C Sign in policy"
      }
    },
    "b2cEditProfilePolicyId": {
      "type": "string",
      "metadata": {
        "description": "Describes the B2C Profile Editing policy"
      }
    },
    "webjobStorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },

    

    

    "workspaceName": {
      "type": "string",
      "maxLength": 17,
      "metadata": {
        "description": "Name of the Workspace to be created"
      }
    },
    "MLskuName": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "S1",
        "S2",
        "S3"
      ],
      "metadata": {
        "description": "Pricing tier for Workspace"
      }
    }

    

  },
  "variables": {

    

    "SQLstorageAccountName": "[concat(uniquestring(resourceGroup().id), 'sqlvm')]",
    "PIstorageAccountName": "[concat(uniquestring(resourceGroup().id), 'pivm')]",
    "WINstorageAccountName": "[concat(uniquestring(resourceGroup().id), 'winvm')]",
    "SQLnicName": "SQLVMNic",
    "PInicName": "PIVMNic",
    "WINnicName": "WINVMNic",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "SQLpublicIPAddressName": "SQLPublicIP",
    "PIpublicIPAddressName": "PIPublicIP",
    "WINpublicIPAddressName": "WINPublicIP",
    "SQLvmName": "TempSQLServerVM",
    "PIvmName": "TempPICoreVM",
    "WINvmName": "TempWinServerVM",
    "virtualNetworkName": "MyVNET",
    "SQLnetworkSecurityGroupName": "SQLNSG",
    "PInetworkSecurityGroupName": "PINSG",
    "WINnetworkSecurityGroupName": "WINNSG",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "PIwindowsOSVersion": "2016-Datacenter",
    "WINwindowsOSVersion": "2016-Datacenter",

   

    
    "DeployStorageAccountName": "emreleasemtr",
    "DeployStorageAccountKey": "08mFhKVe/L2kRR6Pvn670VkjzPN8lsDTO6EPdauDI1hbswBjag0KXN6aHA764XJPt8n7W7lh2AnkygGZcJ7D5A==",
    "WebAppDeployPackageURI": "https://emreleasemtr.blob.core.windows.net/releasemtr/CSUWebApp.zip",
    "RestServerDeployPackageURI": "https://emreleasemtr.blob.core.windows.net/releasemtr/RestService.zip",
    "SasToken": "?",
    "jobCollectionName": "[concat('myjob', uniqueString(resourceGroup().id))]",
    "webjobStorageName": "[concat('webjobstr', uniqueString(resourceGroup().id))]",
    "MLStorageName": "[concat('mlstr', uniqueString(resourceGroup().id))]",

    

    

    "sqlserverName": "[concat('sqlserver', uniqueString(resourceGroup().id))]",
    "storageKeyType": "SharedAccessKey",
    "storageKey": "?",
    "bacpacUri": "https://emreleasemtr.blob.core.windows.net/releasemtr/PowerGrid.bacpac",
    "databaseConnString": "[concat('data source=',variables('sqlserverName'),'.database.windows.net;initial catalog=',parameters('sqldatabasename'),';persist security info=True;user id=',parameters('sqlAdministratorLogin'),';password=',parameters('sqlAdministratorLoginPassword'))]",
    

    "b2cAadInstance": "https://login.microsoftonline.com/{0}/v2.0/.well-known/openid-configuration?p={1}",

    

    

    "WebAppPackageURI": "[concat(variables('WebAppDeployPackageURI'), variables('SasToken'))]",
    "RESTServerPackageURI": "[concat(variables('RestServerDeployPackageURI'), variables('SasToken'))]",
    "BlobconnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('DeployStorageAccountName'),';AccountKey=',variables('DeployStorageAccountKey'))]",
    "websiteFullAddress": "[concat('https://',parameters('webSiteName'),'.azurewebsites.net/')]",
    

    

    "notificationIcon": "./Assets/logo.png",
    "anomalyThreshold": "0.6",
    "meterKWHCost": "0.04",
    "notificationClickAction": "[variables('websiteFullAddress')]",
    "PowerGridEntities": "[concat('metadata=res://*/Entities.PowergridModel.csdl|res://*/Entities.PowergridModel.ssdl|res://*/Entities.PowergridModel.msl;provider=System.Data.SqlClient;provider connection string=\"data source=',variables('sqlserverName'),'.database.windows.net;initial catalog=',parameters('sqldatabasename'),';persist security info=True;user id=',parameters('sqlAdministratorLogin'),';password=',parameters('sqlAdministratorLoginPassword'),';multipleactiveresultsets=True;application name=EntityFramework\"')]"

    

  },
  "resources": [
    

    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('SQLstorageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('PIstorageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('WINstorageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('SQLpublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('SQLDnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('PIpublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('PIDnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('WINpublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('WINDnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('SQLnicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('SQLpublicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('SQLnetworkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('SQLpublicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('SQLnetworkSecurityGroupName'))]"
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('PInicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('PIpublicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('PInetworkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('PIpublicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('PInetworkSecurityGroupName'))]"
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('WINnicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('WINpublicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('WINnetworkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('WINpublicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('WINnetworkSecurityGroupName'))]"
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "[variables('SQLnetworkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "TCP",
              "destinationPortRange": "3389",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "default-allow-sql",
            "properties": {
              "priority": 1500,
              "sourceAddressPrefix": "*",
              "protocol": "TCP",
              "destinationPortRange": "1433",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "PIData",
            "properties": {
              "priority": 1600,
              "sourceAddressPrefix": "*",
              "protocol": "*",
              "destinationPortRange": "5450",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "SQLAnalysis2383",
            "properties": {
              "priority": 2000,
              "sourceAddressPrefix": "*",
              "protocol": "*",
              "destinationPortRange": "2383",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "SQLAnalysis2382",
            "properties": {
              "priority": 2100,
              "sourceAddressPrefix": "*",
              "protocol": "*",
              "destinationPortRange": "2382",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "HTTP",
            "properties": {
              "priority": 100,
              "sourceAddressPrefix": "*",
              "protocol": "TCP",
              "destinationPortRange": "80",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "HTTPS",
            "properties": {
              "priority": 200,
              "sourceAddressPrefix": "*",
              "protocol": "TCP",
              "destinationPortRange": "443",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "PIUFLConnector",
            "properties": {
              "priority": 2200,
              "sourceAddressPrefix": "*",
              "protocol": "*",
              "destinationPortRange": "5460",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('PInetworkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "TCP",
              "destinationPortRange": "3389",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('WINnetworkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "TCP",
              "destinationPortRange": "3389",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('PIvmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('PIstorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('PInicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS2_v2"
        },
        "osProfile": {
          "computerName": "[variables('PIvmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[variables('PIwindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('PInicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('PIstorageAccountName'))).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('WINvmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('WINstorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('WINnicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS2_v2"
        },
        "osProfile": {
          "computerName": "[variables('WINvmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[variables('WINwindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('WINnicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('WINstorageAccountName'))).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "name": "[variables('SQLvmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('SQLstorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('SQLnicName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[variables('SQLvmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "Standard_DS3_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[variables('WINwindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": "1023",
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('SQLnicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('SQLstorageAccountName'))).primaryEndpoints.blob]"
          }
        }
      }
    },

    

    

    {
      "name": "[variables('sqlserverName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "SqlServer"
      },
      "apiVersion": "2014-04-01",
      "properties": {
        "administratorLogin": "[parameters('sqlAdministratorLogin')]",
        "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "name": "[parameters('sqldatabasename')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "Database"
          },
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[variables('sqlserverName')]"
          ],
          "properties": {
            "edition": "Standard",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "268435456000",
            "requestedServiceObjectiveName": "S2"
          },
          "resources": [
            {
              "name": "myImport",
              "type": "extensions",
              "apiVersion": "2014-04-01-preview",
              "dependsOn": [
                "[variables('sqlserverName')]",
                "[parameters('sqldatabasename')]"
              ],
              "tags": {
                "displayName": "myImport"
              },
              "properties": {
                "storageKeyType": "[variables('storageKeyType')]",
                "storageKey": "[variables('storageKey')]",
                "storageUri": "[variables('bacpacUri')]",
                "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
                "operationMode": "Import"
              }
            }
          ]
        },
        {
          "type": "firewallrules",
          "apiVersion": "2014-04-01",
          "dependsOn": [
            "[variables('sqlserverName')]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        }
      ]
    },

    

    

    {
      "apiVersion": "2016-03-01",
      "name": "[parameters('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "HostingPlan"
      },
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "properties": {
        "name": "[parameters('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2016-03-01",
      "name": "[parameters('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[parameters('hostingPlanName')]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName')))]": "empty",
        "displayName": "Website"
      },
      "properties": {
        "name": "[parameters('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', parameters('webSiteName'))]",
            "[concat('Microsoft.Web/sites/', parameters('webSiteName'), '/extensions/MSDeploy')]"
          ],
          "tags": {
            "displayName": "WebAppConfig"
          },
          "properties": {
            "phpVersion": "5.6",
            "netFrameworkVersion": "v4.6",
            "use32BitWorkerProcess": false,
            "webSocketsEnabled": true,
            "alwaysOn": true,
            "remoteDebuggingEnabled": true,
            "remoteDebuggingVersion": "VS2015"
          }
        },
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', parameters('webSiteName'))]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('webjobStorageName'))]"
          ],
          "tags": {
            "displayName": "WebAppMSDeploy"
          },
          "properties": {
            "packageUri": "[variables('WebAppPackageURI')]"
          }
        },
        {
          "name": "connectionstrings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', parameters('webSiteName'))]",
            "[concat('Microsoft.Web/sites/', parameters('webSiteName'), '/extensions/MSDeploy')]"
          ],
          "tags": {
            "displayName": "WebAppConnectionStrings"
          },
          "properties": {
            "BlobConnection": {
              "value": "[variables('BlobconnectionString')]",
              "type": "Custom"
            }
          }
        },
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('webSiteName'))]",
            "[concat('Microsoft.Web/sites/', parameters('webSiteName'), '/extensions/MSDeploy')]"
          ],
          "tags": {
            "displayName": "websiteAppSettings"
          },
          "properties": {
            "restServer": "[concat('https://', parameters('apiServerName'),'.azurewebsites.net/')]",
            "b2cApplicationId": "[parameters('b2cClientId')]",
            "signInPolicyName": "[parameters('b2cSignInPolicyId')]",
            "signInSignUpPolicyName": "[parameters('b2cSignUpPolicyId')]",
            "editProfilePolicyName": "[parameters('b2cEditProfilePolicyId')]",
            "tenantName": "[parameters('b2cTenant')]",
            "redirect_uri": "[concat(variables('websiteFullAddress'),'#/dashboard')]"
          }
        }
      ]
    },
    {
      "apiVersion": "2014-08-01-preview",
      "name": "[variables('jobCollectionName')]",
      "type": "Microsoft.Scheduler/jobCollections",
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', parameters('apiServerName'))]"
      ],
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "standard"
        },
        "quota": {
          "maxJobCount": "10",
          "maxRecurrence": {
            "Frequency": "minute",
            "interval": "1"
          }
        }
      },
      "resources": [
        {
          "apiVersion": "2014-08-01-preview",
          "name": "DataUtilWebJob",
          "type": "jobs",
          "dependsOn": [
            "[resourceId('Microsoft.Scheduler/jobCollections', variables('jobCollectionName'))]"
          ],
          "properties": {
            "startTime": "2015-02-10T00:08:00Z",
            "action": {
              "request": {
                "uri": "[concat(list(resourceId('Microsoft.Web/sites/config', parameters('apiServerName'), 'publishingcredentials'), '2014-06-01').properties.scmUri, '')]",
                "method": "GET"
              },
              "type": "HTTP",
              "retryPolicy": {
                "retryType": "Fixed",
                "retryInterval": "PT1M",
                "retryCount": 2
              }
            },
            "state": "enabled"
          }
        }
      ]
    },
    {
      "apiVersion": "2016-03-01",
      "name": "[parameters('apiServerName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[parameters('hostingPlanName')]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName')))]": "empty",
        "displayName": "Website"
      },
      "properties": {
        "name": "[parameters('apiServerName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', parameters('apiServerName'))]",
            "[concat('Microsoft.Web/sites/', parameters('apiServerName'), '/extensions/MSDeploy')]"
          ],
          "tags": {
            "displayName": "WebAppConfig"
          },
          "properties": {
            "phpVersion": "5.6",
            "netFrameworkVersion": "v4.6",
            "use32BitWorkerProcess": false,
            "webSocketsEnabled": true,
            "alwaysOn": true,
            "remoteDebuggingEnabled": true,
            "remoteDebuggingVersion": "VS2015",
            "cors": {
              "allowedOrigins": [
                "[concat('https://', parameters('webSiteName'), '.azurewebsites.net')]"
              ]
            }
          }
        },
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', parameters('apiServerName'))]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('webjobStorageName'))]"
          ],
          "tags": {
            "displayName": "WebAppMSDeploy"
          },
          "properties": {
            "packageUri": "[variables('RESTServerPackageURI')]"
          }
        },
        {
          "name": "connectionstrings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', parameters('apiServerName'))]",
            "[concat('Microsoft.Web/sites/', parameters('apiServerName'), '/extensions/MSDeploy')]"
          ],
          "tags": {
            "displayName": "RESTServerConnectionStrings"
          },
          "properties": {
            "BlobConnection": {
              "value": "[variables('BlobconnectionString')]",
              "type": "Custom"
            },
            "PowerGridEntities": {
              "value": "[variables('PowerGridEntities')]",
              "type": "Custom"
            },
            "AzureWebJobsDashboard": {
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('webjobStorageName'),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('webjobStorageName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
              "type": "Custom"
            },
            "AzureWebJobsStorage": {
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('webjobStorageName'),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('webjobStorageName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
              "type": "Custom"
            }
          }
        },
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('apiServerName'))]",
            "[concat('Microsoft.Web/sites/', parameters('apiServerName'), '/extensions/MSDeploy')]"
          ],
          "tags": {
            "displayName": "restAppSettings"
          },
          "properties": {
            "AnomalyThreshold": "[variables('anomalyThreshold')]",
            "MeterKwhCost": "[variables('meterKWHCost')]",
            "DbConnectionString": "[variables('databaseConnString')]",
            "NotificationIcon": "[variables('notificationIcon')]",
            "NotificationClickAction": "[variables('notificationClickAction')]",
            "PowerGridEntities": "[variables('PowerGridEntities')]",
            "b2c:AadInstance": "[variables('b2cAadInstance')]",
            "b2c:Tenant": "[parameters('b2cTenant')]",
            "b2c:ClientId": "[parameters('b2cClientId')]",
            "b2c:SignUpPolicyId": "[parameters('b2cSignUpPolicyId')]",
            "b2c:SignInPolicyId": "[parameters('b2cSignInPolicyId')]"
          }
        }
      ]
    },
    {
      "name": "[variables('webjobStorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('webjobStorageType')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "webjobStorage"
      },
      "kind": "Storage"
    },

    

    

    {
      "apiVersion": "2016-04-01",
      "name": "[parameters('workspaceName')]",
      "location": "[resourceGroup().location]",
      "type": "Microsoft.MachineLearning/workspaces",
      "properties": {
        "userStorageAccountId": "[resourceId('Microsoft.Storage/storageAccounts',toLower(variables('MLStorageName')))]"
      },
      "dependsOn": [
        "[toLower(variables('MLStorageName'))]"
      ]
    },
    {
      "apiVersion": "2016-01-01",
      "name": "[toLower(variables('MLStorageName'))]",
      "location": "[resourceGroup().location]",
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage"
    },
    {
      "apiVersion": "2016-05-01-preview",
      "name": "[concat(parameters('workspaceName'),'Plan')]",
      "type": "Microsoft.MachineLearning/commitmentPlans",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('MLskuName')]",
        "tier": "Standard",
        "capacity": "1"
      },
      "properties": {}
    }

    

  ],
  "outputs": {
    

    "PIhostname": {
      "type": "string",
      "value": "[reference(variables('PIpublicIPAddressName')).dnsSettings.fqdn]"
    },
    "SQLhostname": {
      "type": "string",
      "value": "[reference(variables('SQLpublicIPAddressName')).dnsSettings.fqdn]"
    },
    "WINhostname": {
      "type": "string",
      "value": "[reference(variables('WINpublicIPAddressName')).dnsSettings.fqdn]"
    },

    

    

    "sqlSvrFqdn": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName]"
    },

    

    

    "WebSiteUri": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Web/sites/', parameters('webSiteName'))).hostnames[0]]"
    },
    "RESTSiteUri": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Web/sites/', parameters('apiServerName'))).hostnames[0]]"
    }

    
  }
}
